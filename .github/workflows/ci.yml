name: GitHub CI

on:

  pull_request:

  push:

 # schedule:
 #  - cron: 0 0 * * 0

jobs:

  build-test:

    # echo '    strategy:'; echo '      fail-fast: false'; echo '      matrix:'; echo '        dir:'; for dir in $(git ls-files '*/Dockerfile' | xargs -n1 dirname | sort -u); do echo "          - '$dir'"; done
    strategy:
      fail-fast: false
      matrix:
        dir:
          - 'apt-cacher-ng'
          - 'backblaze-b2'
          - 'beets'
          - 'byzanz'
          - 'caff'
          - 'certbot'
          - 'dell-netextender'
          - 'dell-netextender/gui'
          - 'diffoscope'
          - 'docker-master'
          - 'docker-master/dind'
          - 'docker-master/git'
          - 'docker-tianon'
          - 'duplicity'
          - 'ehour'
          - 'exim4'
          - 'github-hub'
          - 'github-pages'
          - 'glxgears'
          - 'gmpydl'
          - 'gmvault'
          - 'google-cloud-print-connector'
          - 'grafana'
          - 'haproxy-sks'
          - 'jenkins'
          - 'kafka'
          - 'kgb-bot'
          - 'latex'
          - 'makemkv'
          - 'mojo'
          - 'moosefs'
          - 'mutt-gmail'
          - 'network-toolbox/alpine'
          - 'network-toolbox/debian'
          - 'perl'
          - 'phpmyadmin'
          - 'plex/media-server'
          - 'prometheus'
          - 'prometheus/blackbox-exporter'
          - 'prometheus/node-exporter'
          - 'rtorrent'
          - 'sbuild'
          - 'skype'
          - 'slack'
          - 'sleeping-beauty'
          - 'speedtest'
          - 'steam'
          - 'tinygo'
          - 'travis-cli'
          - 'true'
          - 'vultr-cli'
          - 'wine'
          - 'xen-orchestra'
          - 'ymlfmt'

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1

      - name: Prepare Environment
        run: docker system prune --all --force --volumes
      - name: Happy Eyeballs
        run: wget -qO- 'https://github.com/tianon/pgp-happy-eyeballs/raw/master/hack-my-builds.sh' | bash

      - name: Build Image
        env:
          DIR: ${{ matrix.dir }}
        run: |
          set -Eeuo pipefail -x
          IMG="${DIR//\//-}"
          docker build -t "$IMG" "$DIR"

      - name: Run Tests
        env:
          DIR: ${{ matrix.dir }}
        run: |
          set -Eeuo pipefail -x
          case "$DIR" in
            # tests fail on single-binary images :D
            sleeping-beauty | true) exit 0 ;;

            # tests fail on ONBUILD images :'(
            github-pages) exit 0 ;;
          esac
          IMG="${DIR//\//-}"
          git clone --depth 1 https://github.com/docker-library/official-images.git ~/oi
          ~/oi/test/run.sh "$IMG"

      - name: '"docker images"'
        run: docker images
